(()=>{"use strict";var n,e,t,r,o={771:(n,e,t)=>{t.d(e,{Z:()=>E});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),c=t.n(A),s=new URL(t(48),t.b),l=a()(o()),d=c()(s);l.push([n.id,`html,\nbody {\n  height: 100dvh;\n}\n\nbody {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${d});\n  background-attachment: fixed;\n  background-color: black;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  color: white;\n  font-family: 'Poppins', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  text-align: center;\n}\n\nmain {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nfooter {\n  text-align: center;\n}\n\nfooter a,\nfooter a:visited {\n  text-decoration: none;\n  color: #ff66ff;\n  font-size: 1.1em;\n  font-weight: 900;\n}\n\n.pexels-api img {\n  width: 100px;\n}\n\n#search-form {\n  padding: 2vw 2vh;\n}\n\n#search-city-form {\n  display: flex;\n  gap: 4px;\n  height: 3vh;\n}\n\n#search {\n  min-height: 100%;\n  border-radius: 5px;\n  outline: none;\n  border: none;\n  padding: 1px 10px;\n  background-color: white;\n}\n\n.submit-btn {\n  min-height: 100%;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.submit-btn:focus {\n  outline: 1px solid white;\n}\n\n.submit-btn svg{\n  min-height: 100%;\n  fill: white;\n}\n\n.weather-container {\n  padding: 1vh 3vw;\n  border: 1px solid white;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.location-info p{\n  display: flex;\n  flex-direction: column;\n  font-size: 1.8rem;\n}\n\n.location-info p span {\n  font-size: 0.5em;\n}\n\n.temp-info {\n  font-size: 4rem;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  margin: 0;\n}\n\n.feelsLike-temp {\n  font-size: 0.5em\n}\n\n.weather-info {\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n}\n\n.cloud-cover-info {\n  grid-column: 1 / 3;\n}\n\n.other-info {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.error-modal {\n  background-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.error-modal div {\n  border: 1px solid white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 2vh 2vw;\n  border-radius: 10px\n}\n\n.dismiss-error-btn {\n  border-radius: 10px;\n  padding: 4px 16px;\n  background-color: white;\n  font-weight: bold;\n  cursor: pointer;\n}`,"",{version:3,sources:["webpack://./src/styles/index.css"],names:[],mappings:"AAAA;;EAEE,cAAc;AAChB;;AAEA;EACE,kHAA0G;EAC1G,4BAA4B;EAC5B,uBAAuB;EACvB,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;EACtB,YAAY;EACZ,8JAA8J;EAC9J,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,qBAAqB;EACrB,cAAc;EACd,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,iBAAiB;EACjB,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,SAAS;AACX;;AAEA;EACE;AACF;;AAEA;EACE,aAAa;EACb,+BAA+B;EAC/B,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,SAAS;EACT,QAAQ;EACR,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB;AACF;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;EACjB,uBAAuB;EACvB,iBAAiB;EACjB,eAAe;AACjB",sourcesContent:["html,\nbody {\n  height: 100dvh;\n}\n\nbody {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(\"../images/default_bg.jpg\");\n  background-attachment: fixed;\n  background-color: black;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  color: white;\n  font-family: 'Poppins', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  text-align: center;\n}\n\nmain {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nfooter {\n  text-align: center;\n}\n\nfooter a,\nfooter a:visited {\n  text-decoration: none;\n  color: #ff66ff;\n  font-size: 1.1em;\n  font-weight: 900;\n}\n\n.pexels-api img {\n  width: 100px;\n}\n\n#search-form {\n  padding: 2vw 2vh;\n}\n\n#search-city-form {\n  display: flex;\n  gap: 4px;\n  height: 3vh;\n}\n\n#search {\n  min-height: 100%;\n  border-radius: 5px;\n  outline: none;\n  border: none;\n  padding: 1px 10px;\n  background-color: white;\n}\n\n.submit-btn {\n  min-height: 100%;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.submit-btn:focus {\n  outline: 1px solid white;\n}\n\n.submit-btn svg{\n  min-height: 100%;\n  fill: white;\n}\n\n.weather-container {\n  padding: 1vh 3vw;\n  border: 1px solid white;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.location-info p{\n  display: flex;\n  flex-direction: column;\n  font-size: 1.8rem;\n}\n\n.location-info p span {\n  font-size: 0.5em;\n}\n\n.temp-info {\n  font-size: 4rem;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  margin: 0;\n}\n\n.feelsLike-temp {\n  font-size: 0.5em\n}\n\n.weather-info {\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n}\n\n.cloud-cover-info {\n  grid-column: 1 / 3;\n}\n\n.other-info {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.error-modal {\n  background-color: black;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.error-modal div {\n  border: 1px solid white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 2vh 2vw;\n  border-radius: 10px\n}\n\n.dismiss-error-btn {\n  border-radius: 10px;\n  padding: 4px 16px;\n  background-color: white;\n  font-weight: bold;\n  cursor: pointer;\n}"],sourceRoot:""}]);const E=l},372:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}',"",{version:3,sources:["webpack://./src/styles/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;EACC,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var E=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==E)e[E].references++,e[E].updater(u);else{var p=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},556:(n,e,t)=>{t.d(e,{Z:()=>o});var r={events:{},subscribe:function(n,e){r.events[n]||(r.events[n]=[]),r.events[n].push(e)},publish:function(n,e){var t=r.events[n];t&&t.forEach((function(n){return n(e)}))}};const o=r},48:(n,e,t)=>{n.exports=t.p+"a4eb44981eda4c8daf68.jpg"}},i={};function a(n){var e=i[n];if(void 0!==e)return e.exports;var t=i[n]={id:n,exports:{}};return o[n](t,t.exports,a),t.exports}a.m=o,a.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return a.d(e,{a:e}),e},a.d=(n,e)=>{for(var t in e)a.o(e,t)&&!a.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),a.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;a.g.importScripts&&(n=a.g.location+"");var e=a.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!n;)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=n})(),a.b=document.baseURI||self.location.href,a.nc=void 0,n=a(556),e=function(n,e,t,r){return new(t||(t=Promise))((function(o,i){function a(n){try{c(r.next(n))}catch(n){i(n)}}function A(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,A)}c((r=r.apply(n,e||[])).next())}))},t=function(n,e){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:A(0),throw:A(1),return:A(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function A(A){return function(c){return function(A){if(t)throw new TypeError("Generator is already executing.");for(;i&&(i=0,A[0]&&(a=0)),a;)try{if(t=1,r&&(o=2&A[0]?r.return:A[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,A[1])).done)return o;switch(r=0,o&&(A=[2&A[0],o.value]),A[0]){case 0:case 1:o=A;break;case 4:return a.label++,{value:A[1],done:!1};case 5:a.label++,r=A[1],A=[0];continue;case 7:A=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==A[0]&&2!==A[0])){a=0;continue}if(3===A[0]&&(!o||A[1]>o[0]&&A[1]<o[3])){a.label=A[1];break}if(6===A[0]&&a.label<o[1]){a.label=o[1],o=A;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(A);break}o[2]&&a.ops.pop(),a.trys.pop();continue}A=e.call(n,a)}catch(n){A=[6,n],r=0}finally{t=o=0}if(5&A[0])throw A[1];return{value:A[0]?A[1]:void 0,done:!0}}([A,c])}}},r=function(r){return e(void 0,void 0,void 0,(function(){var e,o,i,a,A;return t(this,(function(t){switch(t.label){case 0:e="https://api.pexels.com/v1/search?query=".concat(r,"+weather+sky&orientation=square&per_page=1"),t.label=1;case 1:return t.trys.push([1,6,,7]),[4,fetch(e,{mode:"cors",headers:{Authorization:"LIEmprnQV9Bi71qXL5xTYlTyJF5OTdtPhNZ6BozSMqeoFxBaaja6fZEp"}})];case 2:return(o=t.sent()).ok?[3,3]:(n.Z.publish("bgImageNotFetched",null),[3,5]);case 3:return[4,o.json()];case 4:i=t.sent(),a=i.photos[0],n.Z.publish("bgImageFetched",{imgUrl:a.src.original,takenByName:a.photographer,takenByUrl:a.photographer_url}),t.label=5;case 5:return[3,7];case 6:return A=t.sent(),console.log(A),[3,7];case 7:return[2]}}))}))},n.Z.subscribe("lookUpWeatherData",(function(o){var i;null!==o&&"searchTerm"in o&&(i=o.searchTerm,e(void 0,void 0,void 0,(function(){var e,o,a;return t(this,(function(t){switch(t.label){case 0:return[4,fetch("http://api.weatherapi.com/v1/current.json?key=a095999d7d0840f98e5142344232108&q=".concat(i))];case 1:return[4,(e=t.sent()).json()];case 2:return o=t.sent(),e.ok?(a={locationName:"".concat((A=o).location.name),locationDescription:"".concat(A.location.region,", ").concat(A.location.country),dayTime:A.current.is_day,lastUpdateDate:A.current.last_updated,tempInCelcius:A.current.temp_c,tempInFarenheit:A.current.temp_f,feelsLikeInCelcius:A.current.feelslike_c,feelsLikeInFarenheit:A.current.feelslike_f,weatherConditionText:A.current.condition.text,weatherConditionUrl:A.current.condition.icon,humidityInPercentage:A.current.humidity,cloudCoverInPercentage:A.current.cloud,uvIndex:A.current.uv},[4,r(a.weatherConditionText)]):[3,4];case 3:return t.sent(),n.Z.publish("weatherDataFetched",a),[3,5];case 4:n.Z.publish("showError",o.error),t.label=5;case 5:return[2]}var A}))})))})),(()=>{var n=a(556),e=document.querySelector("form#search-city-form");null==e||e.addEventListener("submit",(function(e){e.preventDefault();var t=new FormData(this).get("cityName");t?n.Z.publish("lookUpWeatherData",{searchTerm:"".concat(t)}):n.Z.publish("showError",{message:"City name cannot be blank!"})})),n.Z.subscribe("bgImageFetched",(function(n){null!==n&&"imgUrl"in n&&function(n,e,t){var r=document.querySelector("body"),o=document.querySelector("div.img-credits");if(r&&(r.style.backgroundImage="linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(".concat(n,")")),o){var i=document.createElement("p");i.innerHTML="Background Image by <a href=".concat(t.toString(),">").concat(e.toString(),"</a> on Pexels");var a=o.firstChild;a&&o.removeChild(a),o.appendChild(i)}}(n.imgUrl,n.takenByName,n.takenByUrl)})),n.Z.subscribe("showError",(function(n){if(null!==n&&"message"in n){var e=document.querySelector("section#weather-data");if(e){var t=e.firstChild;t&&e.removeChild(t),e.appendChild(function(n){var e=document.createElement("div");e.classList.add("error-modal");var t=document.createElement("div"),r=document.createElement("h2");r.textContent="ERROR!",t.appendChild(r);var o=document.createElement("p");o.textContent=n,t.appendChild(o);var i=document.createElement("button");return i.classList.add("dismiss-error-btn"),i.textContent="OK",i.addEventListener("click",(function(){e.remove()})),t.appendChild(i),e.appendChild(t),e}(n.message))}}})),n.Z.subscribe("lookUpWeatherData",(function(){var n=document.querySelector("section#weather-data");if(n){var e=n.firstChild;e&&n.removeChild(e);var t=document.createElement("h2");t.textContent="Fetching Data...",n.appendChild(t)}})),n.Z.subscribe("weatherDataFetched",(function(n){null!==n&&"tempInCelcius"in n&&function(n){var e=document.querySelector("section#weather-data");if(e){var t=e.firstChild;null!==t&&e.removeChild(t),e.appendChild(function(n){var e=n.locationName,t=n.locationDescription,r=n.lastUpdateDate,o=n.tempInCelcius,i=n.tempInFarenheit,a=n.feelsLikeInCelcius,A=n.feelsLikeInFarenheit,c=n.weatherConditionText,s=n.weatherConditionUrl,l=n.humidityInPercentage,d=n.cloudCoverInPercentage,E=n.uvIndex,u=document.createElement("div");u.dataset.unitPreference="Celcius",u.classList.add("weather-container");var p=document.createElement("p");p.textContent="Weather as of: ".concat(r),u.appendChild(p);var m=document.createElement("div");m.classList.add("location-info");var h=document.createElement("p");h.textContent=e;var f=document.createElement("span");f.textContent=t,h.appendChild(f),m.appendChild(h),u.appendChild(m);var b=document.createElement("p");b.classList.add("temp-info");var C=document.createElement("span");C.textContent="".concat(o," °C"),C.classList.add("actual-temp"),b.appendChild(C);var g=document.createElement("span");g.textContent="Feels like ".concat(a," °C"),g.classList.add("feelsLike-temp"),b.appendChild(g),b.addEventListener("click",(function(){u.dataset.unitPreference="Farenheit"===u.dataset.unitPreference?"Celcius":"Farenheit",C.textContent="Farenheit"===u.dataset.unitPreference?"".concat(i," °F"):"".concat(o," °C"),g.textContent="Farenheit"===u.dataset.unitPreference?"Feels like ".concat(A," °F"):"Feels like ".concat(a," °C")})),u.appendChild(b);var B=document.createElement("div");B.classList.add("weather-info");var v=document.createElement("img");v.src=s,B.appendChild(v);var y=document.createElement("p");y.textContent=c,B.appendChild(y);var x=document.createElement("p");x.classList.add("cloud-cover-info"),x.textContent="Cloud cover of ".concat(d," %"),B.appendChild(x),u.appendChild(B);var w=document.createElement("div");w.classList.add("other-info");var k=document.createElement("p");k.textContent="Humidity: ".concat(l,"%"),w.appendChild(k);var z=document.createElement("p");return z.textContent="UV Index: ".concat(E),w.appendChild(z),u.appendChild(w),u}(n))}}(n)}))})(),(()=>{var n=a(556),e=a(379),t=a.n(e),r=a(795),o=a.n(r),i=a(569),A=a.n(i),c=a(565),s=a.n(c),l=a(216),d=a.n(l),E=a(589),u=a.n(E),p=a(372),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var h=a(771),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),t()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;var b=navigator.geolocation;b&&b.getCurrentPosition((function(e){var t=e.coords;n.Z.publish("lookUpWeatherData",{searchTerm:"".concat(t.latitude,", ").concat(t.longitude)})}),(function(n){var e=n.message;console.log("Unable to obtain user location as ".concat(e))}),{enableHighAccuracy:!0})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,