(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>k});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),c=t.n(s),A=new URL(t(725),t.b),d=new URL(t(32),t.b),l=new URL(t(190),t.b),u=new URL(t(334),t.b),p=new URL(t(162),t.b),m=new URL(t(93),t.b),g=new URL(t(658),t.b),f=new URL(t(491),t.b),b=i()(o());b.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Staatliches&display=swap);"]);var h=c()(A),C=c()(d),I=c()(l),v=c()(u),B=c()(p),w=c()(m),y=c()(g),x=c()(f);b.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n}\n\nhtml, body {\n    width: 100%;\n    height: 100%;\n    \n    font-family: 'Staatliches', cursive;\n    color: bisque;\n}\n\nmain {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n}\n\nform {\n    display: flex;\n    align-self: flex-end;\n    align-items: center;\n    gap: 4px;\n    font-size: 1rem;\n    padding-top: 2rem;\n    padding-right: 1rem;\n}\n\nform>input {\n    height: 1rem;\n    width: 200px;\n    background-color: beige;\n    border: none;\n    border-radius: 100px;\n    padding-left: 8px;\n    font-weight: bold;\n}\n\nform>button {\n    width: 1.5rem;\n    height: 1.5rem;\n    background: url("+h+");\n    background-size: cover;\n    border: none;\n    border-radius: 100px;\n}\n\nbutton:hover {\n    box-shadow: 0 0 5px 3px beige;\n}\n\n#display-weather {\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding: 36px;\n\n}\n\n#place {\n    font-size: 2rem;\n}\n\n#temp-parent {\n    font-size: 4rem;\n}\n\n#feels-like-parent {\n    font-size: 2rem;\n}\n\n#weather-parent{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n}\n\n#weather {\n    font-size: 3rem;\n    grid-column: 1 / 3;\n}\n\n#pressure {\n    font-size: 2rem;\n}\n\n#humidity {\n    font-size: 2rem;\n}\n\nfooter {\n    font-size: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.dim {\n    opacity: 0.5;\n}\n\n#celcius:hover,\n#farenheit:hover {\n    border-radius: 100px;\n    font-weight: bolder;\n    opacity: 1;\n}\n\n#error {\n    font-size: 3rem;\n    color: red;\n}\n\n.selected {\n    color: greenyellow;\n    font-weight: bolder;\n    text-shadow: 0 0 1rem beige;\n    opacity: 1;\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.thunderstorm {\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+C+");\n    background-size: cover;\n}\n.rain{\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+I+");\n    background-size: cover;\n}\n.snow {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+v+");\n    background-size: cover;\n}\n.atmo {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+B+");\n    background-size: cover;\n}\n.few-clouds {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+w+");\n    background-size: cover;\n}\n.dark-clouds {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+y+");\n    background-size: cover;\n}\n.clear {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("+x+");\n    background-size: cover;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,mCAAmC;IACnC,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,QAAQ;IACR,eAAe;IACf,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,oBAAoB;IACpB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,mDAAoC;IACpC,sBAAsB;IACtB,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,OAAO;;IAEP,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;IAEvB,aAAa;;AAEjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;AACb;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,oBAAoB;IACpB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,eAAe;IACf,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,2BAA2B;IAC3B,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6HAAgH;IAChH,sBAAsB;AAC1B;AACA;IACI,uHAAuG;IACvG,sBAAsB;AAC1B;AACA;IACI,uHAAuG;IACvG,sBAAsB;AAC1B;AACA;IACI,uHAAsG;IACtG,sBAAsB;AAC1B;AACA;IACI,uHAA6G;IAC7G,sBAAsB;AAC1B;AACA;IACI,uHAA8G;IAC9G,sBAAsB;AAC1B;AACA;IACI,uHAA4G;IAC5G,sBAAsB;AAC1B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Staatliches&display=swap');\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nhtml, body {\n    width: 100%;\n    height: 100%;\n    \n    font-family: 'Staatliches', cursive;\n    color: bisque;\n}\n\nmain {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n}\n\nform {\n    display: flex;\n    align-self: flex-end;\n    align-items: center;\n    gap: 4px;\n    font-size: 1rem;\n    padding-top: 2rem;\n    padding-right: 1rem;\n}\n\nform>input {\n    height: 1rem;\n    width: 200px;\n    background-color: beige;\n    border: none;\n    border-radius: 100px;\n    padding-left: 8px;\n    font-weight: bold;\n}\n\nform>button {\n    width: 1.5rem;\n    height: 1.5rem;\n    background: url(./images/search.svg);\n    background-size: cover;\n    border: none;\n    border-radius: 100px;\n}\n\nbutton:hover {\n    box-shadow: 0 0 5px 3px beige;\n}\n\n#display-weather {\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding: 36px;\n\n}\n\n#place {\n    font-size: 2rem;\n}\n\n#temp-parent {\n    font-size: 4rem;\n}\n\n#feels-like-parent {\n    font-size: 2rem;\n}\n\n#weather-parent{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n}\n\n#weather {\n    font-size: 3rem;\n    grid-column: 1 / 3;\n}\n\n#pressure {\n    font-size: 2rem;\n}\n\n#humidity {\n    font-size: 2rem;\n}\n\nfooter {\n    font-size: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.dim {\n    opacity: 0.5;\n}\n\n#celcius:hover,\n#farenheit:hover {\n    border-radius: 100px;\n    font-weight: bolder;\n    opacity: 1;\n}\n\n#error {\n    font-size: 3rem;\n    color: red;\n}\n\n.selected {\n    color: greenyellow;\n    font-weight: bolder;\n    text-shadow: 0 0 1rem beige;\n    opacity: 1;\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.thunderstorm {\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/thunder.webp);\n    background-size: cover;\n}\n.rain{\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/rain.webp);\n    background-size: cover;\n}\n.snow {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/snow.webp);\n    background-size: cover;\n}\n.atmo {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/fog.webp);\n    background-size: cover;\n}\n.few-clouds {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/few-clouds.webp);\n    background-size: cover;\n}\n.dark-clouds {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/dark-clouds.webp);\n    background-size: cover;\n}\n.clear {\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(./images/clear-sky.webp);\n    background-size: cover;\n}"],sourceRoot:""}]);const k=b},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],A=r.base?c[0]+r.base:c[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=s,n.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),A=0;A<a.length;A++){var d=t(a[A]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},491:(e,n,t)=>{e.exports=t.p+"061408830392dd99accf.webp"},658:(e,n,t)=>{e.exports=t.p+"09c2020bc856af189193.webp"},93:(e,n,t)=>{e.exports=t.p+"0d54d243f666577b8c36.webp"},162:(e,n,t)=>{e.exports=t.p+"e840c3f555fca261a440.webp"},190:(e,n,t)=>{e.exports=t.p+"e04bc9cb8a5e5d736452.webp"},725:(e,n,t)=>{e.exports=t.p+"87567792633112aa8610.svg"},334:(e,n,t)=>{e.exports=t.p+"abfe5aa18667c2bc11ff.webp"},32:(e,n,t)=>{e.exports=t.p+"dc6402901104a09f3bef.webp"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const e=document.querySelector("body"),n=document.querySelector("#display-weather"),r=document.querySelector("#place"),o=document.querySelector("#temp"),a=document.querySelector("#feels-like"),i=document.querySelector("#weather"),s=document.querySelector("#pressure"),c=document.querySelector("#humidity"),A=document.querySelector("#error"),d={location:null,country:null,tempInC:null,tempInF:null,feelsLikeInC:null,feelsLikeInF:null,humidity:null,pressure:null,weatherCode:null,weatherMain:null,weatherInfo:null};function l(e){return Math.round(e-273.15)}function u(e){return Math.round(1.8*(e-273)+32)}var p=t(379),m=t.n(p),g=t(795),f=t.n(g),b=t(569),h=t.n(b),C=t(565),I=t.n(C),v=t(216),B=t.n(v),w=t(589),y=t.n(w),x=t(426),k={};k.styleTagTransform=y(),k.setAttributes=I(),k.insert=h().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=B(),m()(x.Z,k),x.Z&&x.Z.locals&&x.Z.locals;const E=document.querySelector("input"),L=document.querySelector("#get-weather"),S=document.querySelector("#celcius"),z=document.querySelector("#farenheit");L.addEventListener("click",(()=>{(async function(n){try{const r=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=8af61ed18fdcc5f12acad023a85e6874`,{method:"GET",mode:"cors"}),o=await r.json();return 200!==o.cod?(t=o.message,A.textContent=t,e.removeAttribute("class"),void e.classList.add("clear")):o}catch(e){console.log(e)}var t})(E.value.toString()).then((t=>{d.location=t.name,d.country=t.sys.country,d.tempInC=l(t.main.temp),d.tempInF=u(t.main.temp),d.feelsLikeInC=l(t.main.feels_like),d.feelsLikeInF=u(t.main.feels_like),d.humidity=t.main.humidity,d.pressure=t.main.pressure,d.weatherCode=t.weather[0].id,d.weatherMain=t.weather[0].main,d.weatherInfo=t.weather[0].description,A.textContent="",n.classList.remove("hidden"),r.textContent=`${d.location}, ${d.country}`,o.textContent=d.tempInC,a.childNodes[0].textContent=`Feels like ${d.feelsLikeInC}`,i.textContent=`${d.weatherMain}, ${d.weatherInfo}`,s.textContent=`Pressure: ${d.pressure} hPa`,c.textContent=`Humidity: ${d.humidity}%`,d.weatherCode>199&&d.weatherCode<300?(e.removeAttribute("class"),e.classList.add("thunderstorm")):d.weatherCode>299&&d.weatherCode<600?(e.removeAttribute("class"),e.classList.add("rain")):d.weatherCode>599&&d.weatherCode<700?(e.removeAttribute("class"),e.classList.add("snow")):d.weatherCode>700&&d.weatherCode<800?(e.removeAttribute("class"),e.classList.add("atmo")):801===d.weatherCode||802===d.weatherCode?(e.removeAttribute("class"),e.classList.add("few-clouds")):803===d.weatherCode||804===d.weatherCode?(e.removeAttribute("class"),e.classList.add("dark-clouds")):(e.removeAttribute("class"),e.classList.add("clear"))})),z.classList.remove("selected")})),S.addEventListener("click",(e=>{const n=e.target;var t;t=n.nextElementSibling,n.classList.toggle("selected"),t.classList.toggle("selected"),t.classList.add("dim"),o.childNodes[0].textContent=d.tempInC,a.childNodes[0].textContent=`Feels like ${d.feelsLikeInC}`})),z.addEventListener("click",(e=>{const n=e.target;var t;t=n.previousElementSibling,n.classList.toggle("selected"),t.classList.toggle("selected"),t.classList.add("dim"),o.childNodes[0].textContent=d.tempInF,a.childNodes[0].textContent=`Feels like ${d.feelsLikeInF}`}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,